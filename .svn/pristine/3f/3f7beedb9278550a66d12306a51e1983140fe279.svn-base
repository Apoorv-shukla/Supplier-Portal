// Payment detail api

// function paymentData(){ 
//   data: "task_id="+task_id,
// $.ajax({
// url: './paymentDetail',
// method: 'post',
// success: function(response) {
//   var res = JSON.parse(response);

//   console.log(res.payment_data);return false;
//   if(res.st===parseInt(1)){
//     $(res.payment_data.records).each(function(key,value){

//               $('#payname').text(value.Name);
//               $('#amount').text(value.Amount__c);
//               $('#status').text(value.Status__c);
//               $('#total').text(value.GrandTotal__c);

//             });
//           }
//        }
//     });
//   }



$("#nav-payment-tab").click(function() {
 $("#paymentloading").addClass('show');
 $.ajax({
  url: './paymentDetail/' + task_id,
  method: 'post',
  success: function(response) {
   var res = JSON.parse(response);
   $("#paymentloading").hide();
   if (res.st === parseInt(1)) {
    $(res.payment_data.records).each(function(key, value) {

     $('#payname').text(value.Name);
     $('#amount').text(value.Amount__c);
     $('#status').text(value.Status__c);
     $('#total').text(value.GrandTotal__c);

    });
   } else if (res.st === parseInt(0)) {
    $('#status').text(res.msg);
   }
   else if(res.st === parseInt(403)){
              swal({
                title: "Logged in Session Expire",
                text: "Page will redirect to login screen in 5 seconds",
                type: "warning",
                timer: 5000
       }).then(function() {
      window.location = "./login";
    });
   }
  }
 });
})


$("#nav-task-tab").click(function() {
 $("#submitaskloading").addClass('show');
 var html = "";
 $.ajax({
  url: base_url + '/submitTaskDeliverable',
  method: 'post',
  data: {
   task_id: task_id
  },
  success: function(response) {
   var res = JSON.parse(response);
   // console.log(res);return false;
   $("#submitaskloading").hide();
   if (res.st === parseInt(1)) {
    $(res.submitTaskDeliverable.records[0].TASKRAY__TaskRay_Checklist_Items__r.records).each(function(key, value) {
     // console.log(value); return false;
     if (value.TASKRAY__Completed__c == true) {
      var status = 'checked disabled';
      var cla_ad = ''
     } else {
      var status = '';
      var cla_ad = 'jai';
     }
     html += '<div class="col-12 col-sm-12 col-md-6 col-lg-3"><div class="form-group form-check"><label><input type="checkbox" class="form-check-input count_checkbox ' + cla_ad + '" name="myCheckboxes[]" id="' + value.Id + '" ' + status + '  value="' + value.Id + '" style="margin-right:10px;"/>' + value.Name + '</label></div></div>';
    });
    $("#submit-task").html(html);
    $("#sheet_link").html('<label class="light mr-3 d-inline-block" >Submit Content Here</label><b><a href="'+res.sheet_link+'" target="_blank">' + res.sheet_link + '</a></b>')
   } else if (res.st === parseInt(0)) {
    $("#submit-task").html('<div class="col-12 col-sm-12" style="text-align:center;"><p><strong>' + res.msg + '</strong></p></div>');
   }
   else if(res.st === parseInt(403)){
              swal({
                title: "Logged in Session Expire",
                text: "Page will redirect to login screen in 5 seconds",
                type: "warning",
                timer: 5000
       }).then(function() {
      window.location = "./login";
    });
   }
  }
 });
});


function UpdateSubmitTaskDel() {
 //$("#submitaskloading").addClass('show');

 // alert($('input:checkbox[class*=count_checkbox]').length);
 // alert($('input:checkbox[class*=count_checkbox]:checked').length);

 if ($('input:checkbox[class*=count_checkbox]').length == $('input:checkbox[class*=count_checkbox]:checked').length) {


  if ($('#mandatory_checkbox').is(':checked')) {
   $("#tasksubmitloading").addClass('show'); 
   var check_id = $("input:checkbox[class*=jai]:checked").map(function() {
    return $(this).val();
   }).get();

   $.ajax({
    url: base_url + '/updateSubmitTaskDeliverable',
    method: 'post',
    data: "check_id=" + check_id,
    success: function(response) {
     var res = JSON.parse(response);

     // $("#submitaskloading").hide();
     $('#submit_for_task_status').prop('disabled', false);
     if (res.submitTaskDeliverable.results[0]['statusCode'] === parseInt(204)) {
      $("#tasksubmitloading").removeClass('show');
      $('#up_sub_t').html('Task submit successfully');
      $('#up_sub_t').addClass('alert alert-success');
      $('#up_sub_t').css({
       "width": "100%",
       "display": "block"
      });
      $('.count_checkbox').attr("disabled", true);
      $('.count_checkbox').addClass('disabled');
      setTimeout(SuccessClass, 2000);
      return false;
     } else {
      $("#tasksubmitloading").removeClass('show');
      $('#up_sub_t').html('There is no task Left at your end.');
      $('#up_sub_t').addClass('alert alert-danger');
      $('#up_sub_t').css({
       "width": "100%",
       "display": "block"
      });
      setTimeout(RemoveClass, 2000);
      return false;
     }
    }
   });
  } else {

   $('#up_sub_t').html('Please checked checkbox I have checked all feedback  & uploaded the  updated deliverable for review');
   $('#up_sub_t').addClass('alert alert-danger');
   $('#up_sub_t').css({
    "width": "100%",
    "display": "block"
   });
   setTimeout(RemoveClass, 2000);
   return false;
  }

 } else {

  $('#up_sub_t').html('Please select all check list');
  $('#up_sub_t').addClass('alert alert-danger');
  $('#up_sub_t').css({
   "width": "100%",
   "display": "block"
  });
  $('#up_sub_t').css({
   "width": "100%",
   "display": "block"
  });
  setTimeout(RemoveClass, 2000);
  return false;
 }



 function RemoveClass() {
  $('#up_sub_t').removeClass("alert alert-danger");
  $('#up_sub_t').css({
   "width": "100%",
   "display": "none"
  });
 }
 function SuccessClass() {
  $('#up_sub_t').removeClass("alert alert-success");
  $('#up_sub_t').css({
   "width": "100%",
   "display": "none"
  });
 }

}


$("#submit_for_task_status").click(function() {
 $("#status_change_outer").addClass('show');
 $("#status_change").addClass('show');
 $.ajax({
  url: base_url + 'submitTaskStatus',
  method: 'post',
  data: "task_id=" + task_id,
  success: function(response) {
   var res = JSON.parse(response);
   $("#status_change_outer").removeClass('show');
   $("#status_change").removeClass('show');
   location.reload();
   if (res.st === parseInt(1)) {
    $('.submit-res').html(res.submitTaskStatus);
    $('.submit-res').removeClass('output task inprogress');
    $('.submit-res').removeClass('output task reject');
    $('.submit-res').addClass('output task review');

   }
  }
 });
});

$("#accept_task_status").click(function() {
 $("#status_change_outer").addClass('show');
 $("#status_change").addClass('show');

 $.ajax({
  url: base_url + 'acceptTaskStatus',
  method: 'post',
  data: "task_id=" + task_id,
  success: function(response) {
   var res = JSON.parse(response);
   $("#status_change_outer").removeClass('show');
   $("#status_change").removeClass('show');
   location.reload();
   if (res.st === parseInt(1)) {
    $('.submit-res').html(res.acceptTaskStatus);
    $('.submit-res').removeClass('output task review');
    $('.submit-res').removeClass('output task reject');
    $('.submit-res').addClass('output task inprogress');

   }
  }
 });
});


$("#reject_task_status").click(function() {
 $("#status_change_outer").addClass('show');
 $("#status_change").addClass('show');
 $.ajax({
  url: base_url + 'rejectTaskStatus',
  method: 'post',
  data: "task_id=" + task_id,
  success: function(response) {
   var res = JSON.parse(response);
   $("#status_change_outer").removeClass('show');
   $("#status_change").removeClass('show');
   location.reload();
   if (res.st === parseInt(1)) {
    $('.submit-res').html(res.rejectTaskStatus);
    $('.submit-res').removeClass('output task review');
    $('.submit-res').removeClass('output task inprogress');
    $('.submit-res').addClass('output task reject');
   }
  }
 });
});


$(document).ready(function() {
 // alert($("[class*=count_checkbox]:checked").length);

 var myvar = $('#statusdetail').val();
 // alert(myvar); return false;
 if (myvar === 'Pending') {
  $('#submit_for_task_status').attr("disabled", true);
  $('#submit_for_task_status').addClass('disabled');
 } else if (myvar === 'Rejected') {
  $('#reject_task_status').attr("disabled", true);
  $('#reject_task_status').addClass('disabled');
 }
 /* else if($('.count_checkbox').is(":checked")){
     
  }*/
 else {
  $('#reject_task_status').attr("disabled", true);
  $('#accept_task_status').attr("disabled", true);
  $('#accept_task_status').addClass('disabled');
  $('#reject_task_status').addClass('disabled');
 }

})



$("#nav-qa-tab").click(function() {
  $("#QA_loading").addClass('show');
  var html = '';
  var label = '';
  var answers = '';
  $.ajax({
    url: base_url + 'getQuestionAnswers/' + task_id,
    method: 'GET',
    success: function(response) {
      $("#QA_loading").removeClass('show');
      var res = JSON.parse(response);
      if (res.st === parseInt(1)) {
        $(res.data).each(function(key, value) {
        var question_label = value.quesChoices !== null ? value.quesChoices.split('\r\n') : ['Testing Question Label'];
        var answers_value = value.answers !== null ? value.answers.split('\n') : ['Testing Question Answers'];
        label = '';

        if (value.quesType == 'Picklist') {
          label += '<div class="form-group "><select class="form-control ' + value.quesID + '">'
          $(question_label).each(function(ke, val) {
          label += '<option ' + (value.answers == val ? 'selected="selected"' : '') + '>' + val + '</option>'
          });
          label += '</select></div>'
        } 

        else {
          $(question_label).each(function(ke, val) {
            if (value.quesType == 'Multi Text input') {
              if (value.accessType == 'Read/Write') {
                label += '<div class="form-group"><label>' + val + '</label><input type="text"  ques_id="' + value.quesID + '" name="input_' + key + '_' + ke + '" class="form-control ' + value.quesID + '" value="' + answers_value[ke] + '"></div>'
              } else {
                label += '<div class="form-group"><label>' + val + '</label><input type="text" name="input_' + key + '_' + ke + '" class="form-control ' + value.quesID + '" disabled="disabled" value="' + answers_value[ke] + '"></div>'
              }
            } else if (value.quesType == 'Text') {
              if (value.accessType == 'Read/Write') {
                label += '<div class="form-group"><label>' + val + '</label><input type="text" ques_id="' + value.quesID + '" name="" class="form-control ' + value.quesID + '" value="' + answers_value[ke] + '"></div>'
              } else {
                label += '<div class="form-group"><label>' + val + '</label><input type="text" name="" class="form-control" disabled="disabled" value="' + answers_value[ke] + '"></div>'
              }
            } else if (value.quesType == 'Text Area') {
              if (value.accessType == 'Read/Write') {
                label += '<div class="form-group"><label>' + val + '</label><textarea ques_id="' + value.quesID + '" rows="2" class="form-control ' + value.quesID + '">' + answers_value[ke] + '</textarea></div>'
              } else {
                label += '<div class="form-group"><label>' + val + '</label><textarea rows="2" class="form-control" disabled="disabled">' + answers_value[ke] + '</textarea></div>'
              }
            } else if (value.quesType == 'Date Picker') {
              label += '<div class="form-group"><input type="text" name="" class="form-control datepicker ' + value.quesID + '" value="29-11-2019"></div>'
            } else if (value.quesType == 'Input file') {
              if (value.accessType == 'Read/Write') {
                label += '<div class="form-group"><label>' + val + '</label><input type="text" ques_id="' + value.quesID + '" name="" class="form-control ' + value.quesID + '" value="' + answers_value[ke] + '"></div>'
              } else {
                label += '<div class="form-group"><label>' + val + '</label><input type="text" name="" class="form-control" disabled="disabled" value="' + answers_value[ke] + '"></div>'
              }
            }
          });
        }

        html += '<div class="card">' +
        '<div class="card-header" id="headingTwo">' +
        '<h5 class="mb-0">' +
        '<button class="btn btn-link collapsed" data-toggle="collapse" data-target="#' + value.quesID + '" aria-expanded="false" aria-controls="collapseTwo">' +
        value.groupName +
        '</button>' +
        '</h5>' +
        '</div>' +
        '<div id="' + value.quesID + '" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">' +
        '<div class="card-body">' +
        '<div class="row">' +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-12">' +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-12 mt-3">' +
        '<h4 class="question_title" ques_id="' + value.quesID + '">' + value.question + '</h4>' +
        label +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>';
        });

        $("#question_answer_tab").html(html);

        $('.datepicker').datepicker({
          changeMonth: true,
          changeYear: true
        });
      } 

      else if(res.st === parseInt(403)){
        swal({
          title: "Logged in Session Expire",
          text: "Page will redirect to login screen in 5 seconds",
          type: "warning",
          timer: 5000
        }).then(function() {
          window.location = "./login";
        });
      }
    }
  });
});


$("#saveQuestionData").click(function() {
  $("#QA_loading").addClass('show');
  var form_ids = [];
  var postData = {};
  var type = 'save';

  $('h4').each(function() {
    id = $(this).attr('ques_id');
    form_ids.push(id);
  });

  $(form_ids).each(function(key, value) {
    if (value != undefined) {
      postData[value] = $("." + value + "").map(function() {
      if ($(this).is(':enabled')) {
        return this.value;
      }
      }).get();
    }
  });

  $.ajax({
    url: base_url + 'saveQuestion/' + type + '/' + task_id,
    method: 'POST',
    data: postData,
    success: function(response) {
      $("#QA_loading").removeClass('show');
      var res = JSON.parse(response);
      if (res.st === parseInt(1)) {
        $("#show_message").html('<p>' + res.msg + '</p>');
        $('#show_message').addClass('alert alert-success');
        $('#show_message').css({"width": "100%"});
        $("#show_message").delay(2000).fadeOut();
      } 

      else if(res.st === parseInt(403)){
        swal({
          title: "Logged in Session Expire",
          text: "Page will redirect to login screen in 5 seconds",
          type: "warning",
          timer: 5000
        }).then(function() {
          window.location = "./login";
        });
      }
    }
  });
});


$("#saveNotifyQuestionData").click(function() {
  $("#QA_loading").addClass('show');
  var form_ids = [];
  var postData = {};
  var type = 'notify';

  $('h4').each(function() {
    id = $(this).attr('ques_id');
    form_ids.push(id);
  });

  $(form_ids).each(function(key, value) {
    if (value != undefined) {
      postData[value] = $("." + value + "").map(function() {
      if ($(this).is(':enabled')) {
        return this.value;
      }
      }).get();
    }
  });

  $.ajax({
    url: base_url + 'saveQuestion/' + type + '/' + task_id,
    method: 'POST',
    data: postData,
    success: function(response) {
      $("#QA_loading").removeClass('show');
      var res = JSON.parse(response);
      if (res.st === parseInt(1)) {
        $("#show_message").html('<p>' + res.msg + '</p>');
        $('#show_message').addClass('alert alert-success');
        $('#show_message').css({"width": "100%"});
        $("#show_message").delay(2000).fadeOut();

        if (res.is_editable == 'false') {
          $(form_ids).each(function(key, value) {
            if (value != undefined) {
              $("." + value + "").attr('disabled', true);
            }
          });
        }
      } 

      else if(res.st === parseInt(403)){
        swal({
          title: "Logged in Session Expire",
          text: "Page will redirect to login screen in 5 seconds",
          type: "warning",
          timer: 5000
        }).then(function() {
          window.location = "./login";
        });
      }
    }
  });
});